basePath: /content
host: localhost
info:
  contact: {}
  description: Rokwire Content Building Block API Documentation.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Rokwire Content Building Block API
  version: 1.0.7
paths:
  /admin/image:
    post:
      consumes:
      - multipart/form-data
      description: Uploads an image to AWS S3
      operationId: AdminUploadImage
      parameters:
      - description: path - path within the S3 bucket
        in: body
        name: path
        required: true
        schema:
          type: string
      - description: width - width of the image to resize. If width and height are
          missing - then the new image will use the original size
        in: body
        name: width
        schema:
          type: string
      - description: height - height of the image to resize. If width and height are
          missing - then the new image will use the original size
        in: body
        name: height
        schema:
          type: string
      - description: 'quality - quality of the image. Default: 90'
        in: body
        name: quality
        schema:
          type: string
      - description: fileName - the uploaded file name
        in: body
        name: fileName
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - AdminUserAuth: []
      tags:
      - Client
  /admin/student_guides:
    get:
      consumes:
      - application/json
      description: Retrieves  all items
      operationId: AdminGetStudentGuides
      parameters:
      - description: Coma separated IDs of the desired records
        in: query
        name: ids
        type: string
      responses:
        "200":
          description: ""
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Retrieves  all items
      operationId: AdminCreateStudentGuide
      responses:
        "200":
          description: ""
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/student_guides/{id}:
    delete:
      description: Deletes a student guide with the specified id
      operationId: AdminDeleteStudentGuide
      responses:
        "200":
          description: ""
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: Retrieves  all items
      operationId: AdminGetStudentGuide
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Updates a student guide with the specified id
      operationId: AdminUpdateStudentGuide
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /image:
    post:
      consumes:
      - multipart/form-data
      description: Uploads an image to AWS S3
      operationId: AdminUpdateStudentGuide
      parameters:
      - description: path - path within the S3 bucket
        in: body
        name: path
        required: true
        schema:
          type: string
      - description: width - width of the image to resize. If width and height are
          missing - then the new image will use the original size
        in: body
        name: width
        schema:
          type: string
      - description: height - height of the image to resize. If width and height are
          missing - then the new image will use the original size
        in: body
        name: height
        schema:
          type: string
      - description: 'quality - quality of the image. Default: 90'
        in: body
        name: quality
        schema:
          type: string
      - description: fileName - the uploaded file name
        in: body
        name: fileName
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - RokwireAuth: []
      tags:
      - Client
  /student_guides:
    get:
      consumes:
      - application/json
      description: Retrieves  all items
      operationId: GetStudentGuides
      parameters:
      - description: Coma separated IDs of the desired records
        in: query
        name: ids
        type: string
      responses:
        "200":
          description: ""
      security:
      - RokwireAuth: []
      tags:
      - Client
  /student_guides/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves  all items
      operationId: GetStudentGuide
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - RokwireAuth: []
      tags:
      - Client
  /twitter/posts:
    get:
      description: Retrieves top most Twitter posts
      operationId: GetTweeterPosts
      parameters:
      - description: 'count - the number of the tweets that will be retrieved. Default:
          5'
        in: query
        name: count
        type: string
      - description: 'force - Forced refresh. Default: false'
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - RokwireAuth: []
      tags:
      - Client
  /version:
    get:
      description: Gives the service version.
      operationId: Version
      produces:
      - text/plain
      responses:
        "200":
          description: ""
      tags:
      - Client
schemes:
- https
securityDefinitions:
  AdminGroupAuth:
    in: header
    name: GROUP
    type: apiKey
  AdminUserAuth:
    in: header (add Bearer prefix to the Authorization value)
    name: Authorization
    type: apiKey
  RokwireAuth:
    in: header
    name: ROKWIRE-API-KEY
    type: apiKey
swagger: "2.0"
