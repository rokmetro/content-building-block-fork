openapi: 3.0.3
info:
  title: Rokwire Content Building Block API
  description: Polls Content Block API Documentation
  version: 1.2.3
servers:
  - url: 'https://api.rokwire.illinois.edu/content'
    description: Production server
  - url: 'https://api-test.rokwire.illinois.edu/content'
    description: Test server
  - url: 'https://api-dev.rokwire.illinois.edu/content'
    description: Development server
  - url: 'http://localhost/content'
    description: Local server
tags:
  - name: Admin
    description: Admin applications APIs.
  - name: Apis
    description: Apis applications APIs.
  - name: Client
    description: Client applications APIs.
paths:
  '/content/profile_photo/{user-id}':
    get:
      tags:
        - Apis
      summary: Retrieves the profile photo
      description: |
        Retrieves a reward inventory by id
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          description: the id of the user
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: size
          in: query
          description: 'Possible values default, medium, small'
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /content/profile_photo:
    get:
      tags:
        - Apis
      summary: Retrieves the profile photo
      description: |
        Retrieves a reward inventory by id
      security:
        - bearerAuth: []
      parameters:
        - name: size
          in: query
          description: 'Possible values default, medium, small'
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    post:
      tags:
        - Apis
      summary: Stores profile photo
      description: |
        Stores profile photo
      security:
        - bearerAuth: []
      requestBody:
        description: Stores profile photo
        content:
          application/json: null
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    delete:
      tags:
        - Apis
      summary: Deletes the profile photo of the user who request
      description: |
        Deletes the profile photo of the user who request
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /content/student_guides:
    get:
      tags:
        - Client
      summary: Retrieves  all student guides
      description: |
        Retrieves  all student guides
      security:
        - bearerAuth: []
      parameters:
        - name: ids
          in: query
          description: Coma separated IDs of the desired records
          required: true
          style: form
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/content/student_guides/{id}':
    get:
      tags:
        - Client
      summary: Retrieves a student guide by id
      description: |
        Retrieves a student guide by id
      security:
        - bearerAuth: []
      parameters:
        - name: guide_id
          in: path
          description: the id of the user
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /content/healt_locations:
    get:
      tags:
        - Client
      summary: Retrieves  all health locations
      description: |
        Retrieves  all health locations
      security:
        - bearerAuth: []
      parameters:
        - name: ids
          in: query
          description: Coma separated IDs of the desired records
          required: true
          style: form
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/content/health_locations/{id}':
    get:
      tags:
        - Client
      summary: Retrieves a health location by id
      description: |
        Retrieves a health location by id
      security:
        - bearerAuth: []
      parameters:
        - name: guide_id
          in: path
          description: the id of the user
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /content/content_items:
    get:
      tags:
        - Client
      summary: Retrieves  all content items
      description: |
        Retrieves  all content items
      security:
        - bearerAuth: []
      requestBody:
        description: Retrieves  all content items
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: string
                categories:
                  type: string
      parameters:
        - name: all-apps
          in: query
          description: all-apps
          required: true
          style: form
          explode: false
          schema:
            type: boolean
        - name: offset
          in: query
          description: offset
          required: true
          style: form
          explode: false
          schema:
            type: string
        - name: limit
          in: query
          description: limit the result
          required: true
          style: form
          explode: false
          schema:
            type: string
        - name: limit
          in: query
          description: limit the result
          required: true
          style: form
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/schemas/Reward'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/content/content_items/{id}':
    get:
      tags:
        - Client
      summary: Retrieves  all content items by id
      description: |
        Retrieves  all content items by id
      security:
        - bearerAuth: []
      parameters:
        - name: all-apps
          in: query
          description: all-apps
          required: true
          style: form
          explode: false
          schema:
            type: boolean
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/schemas/Reward'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /content/content_item/categories:
    get:
      tags:
        - Client
      summary: Retrieves  all content item categories that have in the database
      description: |
        Retrieves  all content item categories that have in the database
      security:
        - bearerAuth: []
      parameters:
        - name: all-apps
          in: query
          description: all-apps
          required: true
          style: form
          explode: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /content/image:
    post:
      tags:
        - Client
      summary: Uploads an image to AWS S3
      description: |
        Uploads an image to AWS S3
      security:
        - bearerAuth: []
      parameters:
        - name: S3 bucket path
          in: query
          description: path within the S3 bucket
          required: true
          style: form
          explode: false
          schema:
            type: boolean
        - name: height
          in: query
          description: height of the image to resize.
          required: true
          style: form
          explode: false
          schema:
            type: string
        - name: width
          in: query
          description: width of the image to resize
          required: true
          style: form
          explode: false
          schema:
            type: string
        - name: quality
          in: query
          description: quality of the image. Default - 100
          required: true
          style: form
          explode: false
          schema:
            type: string
        - name: fileName
          in: query
          description: the uploaded file name
          required: true
          style: form
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/content/twitter/users/{user_id}/tweets':
    get:
      tags:
        - Client
      summary: Retrieves Twitter tweets for the specified user id
      description: |
        Retrieves Twitter tweets for the specified user id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: query
          description: id path string true "id"
          required: true
          style: form
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  components: null
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Reward:
      type: object
      properties:
        _id:
          type: string
        category:
          type: string
        date_created:
          type: string
        date_updated:
          type: string
        data:
          type: array
        org_id:
          type: string
        app_id:
          type: string
    RewardClaim:
      type: object
      properties:
        height:
          type: integer
        width:
          type: integer
        quality:
          type: integer
